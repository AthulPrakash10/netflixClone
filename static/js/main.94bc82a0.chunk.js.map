{"version":3,"sources":["Components/NavBar/NavBar.js","Constants/Constants.js","axios.js","Components/Banner/Banner.js","Components/RowPost/RowPost.js","urls.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","src","alt","API_Key","imageUrl","instance","axios","create","baseURL","Banner","useState","movie","setMovie","useEffect","get","then","response","console","log","data","results","Math","floor","random","length","style","backgroundImage","backdrop_path","title","overview","RowPost","props","movies","setMovies","urlId","seturlId","url","catch","err","alert","map","obj","onClick","id","isSmall","opts","height","width","playerVars","autoplay","videoId","key","originals","action","thriller","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94bc82a0.chunk.js","sourcesContent":["import React from 'react';\nimport './NavBar.css';\n\nfunction NavBar() {\n    return (\n        <div className = 'navbar'>\n\n            <img className = \"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\" alt=\"netflix-logo\" />\n            <img className = \"avatar\" src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\" alt=\"avatar\" />\n        </div>\n    )\n}\n\nexport default NavBar\n","export const baseUrl = \"https://api.themoviedb.org/3\";\nexport const API_Key = \"de6ec07f9270c8fbf551a28d84526f7b\";\nexport const imageUrl = \"https://image.tmdb.org/t/p/original\";","import axios from \"axios\";\nimport { baseUrl } from \"./Constants/Constants\";\n\nconst instance = axios.create({\n    baseURL: baseUrl,\n});\n\nexport default instance;\n\n","import React, {useEffect, useState} from 'react'\nimport './Banner.css'\nimport axios from '../../axios'\nimport {API_Key} from '../../Constants/Constants'\nimport {imageUrl} from '../../Constants/Constants'\n\n\nfunction Banner() {\n    const [movie, setMovie] = useState(\"\")\n    useEffect(() => {\n        axios.get(`trending/all/week?api_key=${API_Key}&language=en-US`).then((response)=>{\n            console.log(response.data.results[Math.floor(Math.random()*response.data.results.length)]);\n            setMovie(response.data.results[Math.floor(Math.random()*response.data.results.length)]);\n        })\n    }, [])\n    return (\n        // https://wallpaperaccess.com/full/2703652.png\n        <div style = {{backgroundImage:`url(${imageUrl+movie.backdrop_path})`}} className='banner'>\n            <img src=\"\" alt=\"\" />\n            <div className='content'>\n                <h1 className='title'> {movie.title} </h1>\n                <div className='banner-buttons'>\n                    <button className='button'> Play </button>\n                    <button className='button'> My list </button>\n                </div>\n                <h1 className='description'> {movie.overview} </h1>\n            </div>\n            <div className=\"fade-bottum\"></div>\n        </div>\n    )\n}\n\nexport default Banner\n","import React,{useState, useEffect} from 'react'\nimport './RowPost.css'\nimport axios from '../../axios'\nimport { API_Key, imageUrl} from '../../Constants/Constants'\nimport YouTube from 'react-youtube'\n\nfunction RowPost(props) {\n    const [movies, setMovies] = useState([])\n    const [urlId, seturlId] = useState('')\n    const opts = {\n        height: '390',\n        width: '100%',\n        playerVars: {\n          autoplay: 1,\n        },\n      };\n  \n    useEffect(() => {\n        axios.get(props.url).then((response)=>{\n            console.log(response.data);\n            setMovies(response.data.results)\n        }).catch((err)=>{\n            alert('Network Error')\n        })\n    },[]);\n\n    const handleMovie = (id)=>{\n        console.log(id)\n        axios.get(`https://api.themoviedb.org/3/movie/${id}/videos?api_key=${API_Key}&language=en-US`).then((response)=>{\n            console.log(response.data);\n            if(response.data.results.length !== 0){\n                seturlId(response.data.results[0])\n            }\n            else{\n                console.log('empty array')\n            }\n        })\n    }\n    return (\n        <div className = 'row'>\n            <h2> {props.title} </h2>\n            <div className=\"posters\">\n                {movies.map((obj)=>{\n                    return(\n                        <img onClick = {()=>handleMovie(obj.id)} className={props.isSmall ? 'smallPoster' : 'poster'} src= {`${imageUrl+obj.backdrop_path}`} alt=\"poster\" />\n                    )\n                })}\n            </div>\n            { urlId && <YouTube opts={opts} videoId={urlId.key} />}\n            \n        </div>\n    )\n}\n\nexport default RowPost\n","import { API_Key } from \"./Constants/Constants\";\n\nexport const originals = `discover/tv?api_key=${API_Key}&with_networks=213`\nexport const action = `discover/movie?api_key=${API_Key}&with_genres=28`\nexport const thriller = `discover/movie?api_key=${API_Key}&with_genres=53`","import React from 'react';\nimport './App.css';\nimport NavBar from './Components/NavBar/NavBar';\nimport Banner from './Components/Banner/Banner';\nimport RowPost from './Components/RowPost/RowPost';\nimport {originals, action, thriller} from './urls';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Banner />\n      <RowPost url = {originals} title = \"Netflix Original\" />\n      <RowPost url = {action} title = \"Action\" isSmall />\n      <RowPost url = {thriller} title = \"Thriller\" isSmall />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}